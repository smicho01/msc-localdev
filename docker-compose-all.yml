version: '3.3'

x-healthcheck-settings: &healthcheck-settings
  interval: 10s
  retries: 10
  start_period: 15s
  timeout: 5s

x-db-env-conf: &db-env
  DATABASE_NAME: ${DATABASE_NAME}
  DATABASE_USERNAME: ${PSQL_USER}
  DATABASE_PASSWORD: ${PSQL_PASSWORD}
  DATABASE_ENDPOINT: postgres
  DATABASE_PORT: 5432

x-db-schema-creation: &db-schema-creation
  image: quay.io/ukhomeofficedigital/postgres:latest
  volumes:
    - ./sql:/sql
  environment:
    <<: *db-env
  entrypoint: ["/sql/create-schema.sh"]
  depends_on:
    postgres:
      condition: service_healthy
  networks:
    - msc

services:
  postgres:
    image: postgres:13.1
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=${PSQL_PASSWORD}
      - POSTGRES_USER=${PSQL_USER}
      - POSTGRES_DB=${DATABASE_NAME}
    networks:
      - msc
    healthcheck:
      test: ["CMD", "psql", "-U", "${PSQL_USER}", "-d", "${DATABASE_NAME}"]
      interval: 500ms
      timeout: 1s
      retries: 5
    volumes:
      - dbdata:/var/lib/postgresql/data


  # Create DB schemas
  students-schema-creation:
    <<: *db-schema-creation
    command: ["users"]

  items-schema-creation:
    <<: *db-schema-creation
    command: ["items"]

  uilogs-schema-creation:
    <<: *db-schema-creation
    command: ["uilogs"]

  core-schema-creation:
    <<: *db-schema-creation
    command: ["core"]

    
  # ADD - build migrations image for each service

  # Services
  academi-core-service:
    image: sever3d/academichain-core-service
    ports:
      - "9090:9090"
    environment:
      - POSTGRESHOST=${POSTGRESHOST}
      - POSTGRESUSER=${POSTGRESUSER}
      - POSTGRESPASSWORD=${POSTGRESPASSWORD}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
      - ITEM_SERVICE_URL=${ITEM_SERVICE_URL}
      - KEYCLOAK_URL=${KEYCLOAK_URL}
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
    # depends_on:
    #   - core-database-migrations
    networks:
      - msc


volumes:
  dbdata:
    driver: local

networks:
  msc:
    driver: bridge